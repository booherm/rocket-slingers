#include "InputEvent.hpp"
#include <iostream>
#include <SDL.h>

std::map<InputEvent::InputEventKey, std::string> InputEvent::eventKeyDescriptions = {
	{ InputEvent::IEK_KEY_0, "IEK_KEY_0" },
	{ InputEvent::IEK_KEY_1, "IEK_KEY_1" },
	{ InputEvent::IEK_KEY_2, "IEK_KEY_2" },
	{ InputEvent::IEK_KEY_3, "IEK_KEY_3" },
	{ InputEvent::IEK_KEY_4, "IEK_KEY_4" },
	{ InputEvent::IEK_KEY_5, "IEK_KEY_5" },
	{ InputEvent::IEK_KEY_6, "IEK_KEY_6" },
	{ InputEvent::IEK_KEY_7, "IEK_KEY_7" },
	{ InputEvent::IEK_KEY_8, "IEK_KEY_8" },
	{ InputEvent::IEK_KEY_9, "IEK_KEY_9" },
	{ InputEvent::IEK_KEY_A, "IEK_KEY_A" },
	{ InputEvent::IEK_KEY_AC_BACK, "IEK_KEY_AC_BACK" },
	{ InputEvent::IEK_KEY_AC_BOOKMARKS, "IEK_KEY_AC_BOOKMARKS" },
	{ InputEvent::IEK_KEY_AC_FORWARD, "IEK_KEY_AC_FORWARD" },
	{ InputEvent::IEK_KEY_AC_HOME, "IEK_KEY_AC_HOME" },
	{ InputEvent::IEK_KEY_AC_REFRESH, "IEK_KEY_AC_REFRESH" },
	{ InputEvent::IEK_KEY_AC_SEARCH, "IEK_KEY_AC_SEARCH" },
	{ InputEvent::IEK_KEY_AC_STOP, "IEK_KEY_AC_STOP" },
	{ InputEvent::IEK_KEY_AGAIN, "IEK_KEY_AGAIN" },
	{ InputEvent::IEK_KEY_ALTERASE, "IEK_KEY_ALTERASE" },
	{ InputEvent::IEK_KEY_QUOTE, "IEK_KEY_QUOTE" },
	{ InputEvent::IEK_KEY_APPLICATION, "IEK_KEY_APPLICATION" },
	{ InputEvent::IEK_KEY_AUDIOMUTE, "IEK_KEY_AUDIOMUTE" },
	{ InputEvent::IEK_KEY_AUDIONEXT, "IEK_KEY_AUDIONEXT" },
	{ InputEvent::IEK_KEY_AUDIOPLAY, "IEK_KEY_AUDIOPLAY" },
	{ InputEvent::IEK_KEY_AUDIOPREV, "IEK_KEY_AUDIOPREV" },
	{ InputEvent::IEK_KEY_AUDIOSTOP, "IEK_KEY_AUDIOSTOP" },
	{ InputEvent::IEK_KEY_B, "IEK_KEY_B" },
	{ InputEvent::IEK_KEY_BACKSLASH, "IEK_KEY_BACKSLASH" },
	{ InputEvent::IEK_KEY_BACKSPACE, "IEK_KEY_BACKSPACE" },
	{ InputEvent::IEK_KEY_BRIGHTNESSDOWN, "IEK_KEY_BRIGHTNESSDOWN" },
	{ InputEvent::IEK_KEY_BRIGHTNESSUP, "IEK_KEY_BRIGHTNESSUP" },
	{ InputEvent::IEK_KEY_C, "IEK_KEY_C" },
	{ InputEvent::IEK_KEY_CALCULATOR, "IEK_KEY_CALCULATOR" },
	{ InputEvent::IEK_KEY_CANCEL, "IEK_KEY_CANCEL" },
	{ InputEvent::IEK_KEY_CAPSLOCK, "IEK_KEY_CAPSLOCK" },
	{ InputEvent::IEK_KEY_CLEAR, "IEK_KEY_CLEAR" },
	{ InputEvent::IEK_KEY_CLEARAGAIN, "IEK_KEY_CLEARAGAIN" },
	{ InputEvent::IEK_KEY_COMMA, "IEK_KEY_COMMA" },
	{ InputEvent::IEK_KEY_COMPUTER, "IEK_KEY_COMPUTER" },
	{ InputEvent::IEK_KEY_COPY, "IEK_KEY_COPY" },
	{ InputEvent::IEK_KEY_CRSEL, "IEK_KEY_CRSEL" },
	{ InputEvent::IEK_KEY_CURRENCYSUBUNIT, "IEK_KEY_CURRENCYSUBUNIT" },
	{ InputEvent::IEK_KEY_CURRENCYUNIT, "IEK_KEY_CURRENCYUNIT" },
	{ InputEvent::IEK_KEY_CUT, "IEK_KEY_CUT" },
	{ InputEvent::IEK_KEY_D, "IEK_KEY_D" },
	{ InputEvent::IEK_KEY_DECIMALSEPARATOR, "IEK_KEY_DECIMALSEPARATOR" },
	{ InputEvent::IEK_KEY_DELETE, "IEK_KEY_DELETE" },
	{ InputEvent::IEK_KEY_DISPLAYSWITCH, "IEK_KEY_DISPLAYSWITCH" },
	{ InputEvent::IEK_KEY_DOWN, "IEK_KEY_DOWN" },
	{ InputEvent::IEK_KEY_E, "IEK_KEY_E" },
	{ InputEvent::IEK_KEY_EJECT, "IEK_KEY_EJECT" },
	{ InputEvent::IEK_KEY_END, "IEK_KEY_END" },
	{ InputEvent::IEK_KEY_EQUALS, "IEK_KEY_EQUALS" },
	{ InputEvent::IEK_KEY_ESCAPE, "IEK_KEY_ESCAPE" },
	{ InputEvent::IEK_KEY_EXECUTE, "IEK_KEY_EXECUTE" },
	{ InputEvent::IEK_KEY_EXSEL, "IEK_KEY_EXSEL" },
	{ InputEvent::IEK_KEY_F, "IEK_KEY_F" },
	{ InputEvent::IEK_KEY_F1, "IEK_KEY_F1" },
	{ InputEvent::IEK_KEY_F10, "IEK_KEY_F10" },
	{ InputEvent::IEK_KEY_F11, "IEK_KEY_F11" },
	{ InputEvent::IEK_KEY_F12, "IEK_KEY_F12" },
	{ InputEvent::IEK_KEY_F13, "IEK_KEY_F13" },
	{ InputEvent::IEK_KEY_F14, "IEK_KEY_F14" },
	{ InputEvent::IEK_KEY_F15, "IEK_KEY_F15" },
	{ InputEvent::IEK_KEY_F16, "IEK_KEY_F16" },
	{ InputEvent::IEK_KEY_F17, "IEK_KEY_F17" },
	{ InputEvent::IEK_KEY_F18, "IEK_KEY_F18" },
	{ InputEvent::IEK_KEY_F19, "IEK_KEY_F19" },
	{ InputEvent::IEK_KEY_F2, "IEK_KEY_F2" },
	{ InputEvent::IEK_KEY_F20, "IEK_KEY_F20" },
	{ InputEvent::IEK_KEY_F21, "IEK_KEY_F21" },
	{ InputEvent::IEK_KEY_F22, "IEK_KEY_F22" },
	{ InputEvent::IEK_KEY_F23, "IEK_KEY_F23" },
	{ InputEvent::IEK_KEY_F24, "IEK_KEY_F24" },
	{ InputEvent::IEK_KEY_F3, "IEK_KEY_F3" },
	{ InputEvent::IEK_KEY_F4, "IEK_KEY_F4" },
	{ InputEvent::IEK_KEY_F5, "IEK_KEY_F5" },
	{ InputEvent::IEK_KEY_F6, "IEK_KEY_F6" },
	{ InputEvent::IEK_KEY_F7, "IEK_KEY_F7" },
	{ InputEvent::IEK_KEY_F8, "IEK_KEY_F8" },
	{ InputEvent::IEK_KEY_F9, "IEK_KEY_F9" },
	{ InputEvent::IEK_KEY_FIND, "IEK_KEY_FIND" },
	{ InputEvent::IEK_KEY_G, "IEK_KEY_G" },
	{ InputEvent::IEK_KEY_BACKQUOTE, "IEK_KEY_BACKQUOTE" },
	{ InputEvent::IEK_KEY_H, "IEK_KEY_H" },
	{ InputEvent::IEK_KEY_HELP, "IEK_KEY_HELP" },
	{ InputEvent::IEK_KEY_HOME, "IEK_KEY_HOME" },
	{ InputEvent::IEK_KEY_I, "IEK_KEY_I" },
	{ InputEvent::IEK_KEY_INSERT, "IEK_KEY_INSERT" },
	{ InputEvent::IEK_KEY_J, "IEK_KEY_J" },
	{ InputEvent::IEK_KEY_K, "IEK_KEY_K" },
	{ InputEvent::IEK_KEY_KBDILLUMDOWN, "IEK_KEY_KBDILLUMDOWN" },
	{ InputEvent::IEK_KEY_KBDILLUMTOGGLE, "IEK_KEY_KBDILLUMTOGGLE" },
	{ InputEvent::IEK_KEY_KBDILLUMUP, "IEK_KEY_KBDILLUMUP" },
	{ InputEvent::IEK_KEY_KP_0, "IEK_KEY_KP_0" },
	{ InputEvent::IEK_KEY_KP_00, "IEK_KEY_KP_00" },
	{ InputEvent::IEK_KEY_KP_000, "IEK_KEY_KP_000" },
	{ InputEvent::IEK_KEY_KP_1, "IEK_KEY_KP_1" },
	{ InputEvent::IEK_KEY_KP_2, "IEK_KEY_KP_2" },
	{ InputEvent::IEK_KEY_KP_3, "IEK_KEY_KP_3" },
	{ InputEvent::IEK_KEY_KP_4, "IEK_KEY_KP_4" },
	{ InputEvent::IEK_KEY_KP_5, "IEK_KEY_KP_5" },
	{ InputEvent::IEK_KEY_KP_6, "IEK_KEY_KP_6" },
	{ InputEvent::IEK_KEY_KP_7, "IEK_KEY_KP_7" },
	{ InputEvent::IEK_KEY_KP_8, "IEK_KEY_KP_8" },
	{ InputEvent::IEK_KEY_KP_9, "IEK_KEY_KP_9" },
	{ InputEvent::IEK_KEY_KP_A, "IEK_KEY_KP_A" },
	{ InputEvent::IEK_KEY_KP_AMPERSAND, "IEK_KEY_KP_AMPERSAND" },
	{ InputEvent::IEK_KEY_KP_AT, "IEK_KEY_KP_AT" },
	{ InputEvent::IEK_KEY_KP_B, "IEK_KEY_KP_B" },
	{ InputEvent::IEK_KEY_KP_BACKSPACE, "IEK_KEY_KP_BACKSPACE" },
	{ InputEvent::IEK_KEY_KP_BINARY, "IEK_KEY_KP_BINARY" },
	{ InputEvent::IEK_KEY_KP_C, "IEK_KEY_KP_C" },
	{ InputEvent::IEK_KEY_KP_CLEAR, "IEK_KEY_KP_CLEAR" },
	{ InputEvent::IEK_KEY_KP_CLEARENTRY, "IEK_KEY_KP_CLEARENTRY" },
	{ InputEvent::IEK_KEY_KP_COLON, "IEK_KEY_KP_COLON" },
	{ InputEvent::IEK_KEY_KP_COMMA, "IEK_KEY_KP_COMMA" },
	{ InputEvent::IEK_KEY_KP_D, "IEK_KEY_KP_D" },
	{ InputEvent::IEK_KEY_KP_DBLAMPERSAND, "IEK_KEY_KP_DBLAMPERSAND" },
	{ InputEvent::IEK_KEY_KP_DBLVERTICALBAR, "IEK_KEY_KP_DBLVERTICALBAR" },
	{ InputEvent::IEK_KEY_KP_DECIMAL, "IEK_KEY_KP_DECIMAL" },
	{ InputEvent::IEK_KEY_KP_DIVIDE, "IEK_KEY_KP_DIVIDE" },
	{ InputEvent::IEK_KEY_KP_E, "IEK_KEY_KP_E" },
	{ InputEvent::IEK_KEY_KP_ENTER, "IEK_KEY_KP_ENTER" },
	{ InputEvent::IEK_KEY_KP_EQUALS, "IEK_KEY_KP_EQUALS" },
	{ InputEvent::IEK_KEY_KP_EQUALSAS400, "IEK_KEY_KP_EQUALSAS400" },
	{ InputEvent::IEK_KEY_KP_EXCLAM, "IEK_KEY_KP_EXCLAM" },
	{ InputEvent::IEK_KEY_KP_F, "IEK_KEY_KP_F" },
	{ InputEvent::IEK_KEY_KP_GREATER, "IEK_KEY_KP_GREATER" },
	{ InputEvent::IEK_KEY_KP_HASH, "IEK_KEY_KP_HASH" },
	{ InputEvent::IEK_KEY_KP_HEXADECIMAL, "IEK_KEY_KP_HEXADECIMAL" },
	{ InputEvent::IEK_KEY_KP_LEFTBRACE, "IEK_KEY_KP_LEFTBRACE" },
	{ InputEvent::IEK_KEY_KP_LEFTPAREN, "IEK_KEY_KP_LEFTPAREN" },
	{ InputEvent::IEK_KEY_KP_LESS, "IEK_KEY_KP_LESS" },
	{ InputEvent::IEK_KEY_KP_MEMADD, "IEK_KEY_KP_MEMADD" },
	{ InputEvent::IEK_KEY_KP_MEMCLEAR, "IEK_KEY_KP_MEMCLEAR" },
	{ InputEvent::IEK_KEY_KP_MEMDIVIDE, "IEK_KEY_KP_MEMDIVIDE" },
	{ InputEvent::IEK_KEY_KP_MEMMULTIPLY, "IEK_KEY_KP_MEMMULTIPLY" },
	{ InputEvent::IEK_KEY_KP_MEMRECALL, "IEK_KEY_KP_MEMRECALL" },
	{ InputEvent::IEK_KEY_KP_MEMSTORE, "IEK_KEY_KP_MEMSTORE" },
	{ InputEvent::IEK_KEY_KP_MEMSUBTRACT, "IEK_KEY_KP_MEMSUBTRACT" },
	{ InputEvent::IEK_KEY_KP_MINUS, "IEK_KEY_KP_MINUS" },
	{ InputEvent::IEK_KEY_KP_MULTIPLY, "IEK_KEY_KP_MULTIPLY" },
	{ InputEvent::IEK_KEY_KP_OCTAL, "IEK_KEY_KP_OCTAL" },
	{ InputEvent::IEK_KEY_KP_PERCENT, "IEK_KEY_KP_PERCENT" },
	{ InputEvent::IEK_KEY_KP_PERIOD, "IEK_KEY_KP_PERIOD" },
	{ InputEvent::IEK_KEY_KP_PLUS, "IEK_KEY_KP_PLUS" },
	{ InputEvent::IEK_KEY_KP_PLUSMINUS, "IEK_KEY_KP_PLUSMINUS" },
	{ InputEvent::IEK_KEY_KP_POWER, "IEK_KEY_KP_POWER" },
	{ InputEvent::IEK_KEY_KP_RIGHTBRACE, "IEK_KEY_KP_RIGHTBRACE" },
	{ InputEvent::IEK_KEY_KP_RIGHTPAREN, "IEK_KEY_KP_RIGHTPAREN" },
	{ InputEvent::IEK_KEY_KP_SPACE, "IEK_KEY_KP_SPACE" },
	{ InputEvent::IEK_KEY_KP_TAB, "IEK_KEY_KP_TAB" },
	{ InputEvent::IEK_KEY_KP_VERTICALBAR, "IEK_KEY_KP_VERTICALBAR" },
	{ InputEvent::IEK_KEY_KP_XOR, "IEK_KEY_KP_XOR" },
	{ InputEvent::IEK_KEY_L, "IEK_KEY_L" },
	{ InputEvent::IEK_KEY_LALT, "IEK_KEY_LALT" },
	{ InputEvent::IEK_KEY_LCTRL, "IEK_KEY_LCTRL" },
	{ InputEvent::IEK_KEY_LEFT, "IEK_KEY_LEFT" },
	{ InputEvent::IEK_KEY_LEFTBRACKET, "IEK_KEY_LEFTBRACKET" },
	{ InputEvent::IEK_KEY_LGUI, "IEK_KEY_LGUI" },
	{ InputEvent::IEK_KEY_LSHIFT, "IEK_KEY_LSHIFT" },
	{ InputEvent::IEK_KEY_M, "IEK_KEY_M" },
	{ InputEvent::IEK_KEY_MAIL, "IEK_KEY_MAIL" },
	{ InputEvent::IEK_KEY_MEDIASELECT, "IEK_KEY_MEDIASELECT" },
	{ InputEvent::IEK_KEY_MENU, "IEK_KEY_MENU" },
	{ InputEvent::IEK_KEY_MINUS, "IEK_KEY_MINUS" },
	{ InputEvent::IEK_KEY_MODE, "IEK_KEY_MODE" },
	{ InputEvent::IEK_KEY_MUTE, "IEK_KEY_MUTE" },
	{ InputEvent::IEK_KEY_N, "IEK_KEY_N" },
	{ InputEvent::IEK_KEY_NUMLOCKCLEAR, "IEK_KEY_NUMLOCKCLEAR" },
	{ InputEvent::IEK_KEY_O, "IEK_KEY_O" },
	{ InputEvent::IEK_KEY_OPER, "IEK_KEY_OPER" },
	{ InputEvent::IEK_KEY_OUT, "IEK_KEY_OUT" },
	{ InputEvent::IEK_KEY_P, "IEK_KEY_P" },
	{ InputEvent::IEK_KEY_PAGEDOWN, "IEK_KEY_PAGEDOWN" },
	{ InputEvent::IEK_KEY_PAGEUP, "IEK_KEY_PAGEUP" },
	{ InputEvent::IEK_KEY_PASTE, "IEK_KEY_PASTE" },
	{ InputEvent::IEK_KEY_PAUSE, "IEK_KEY_PAUSE" },
	{ InputEvent::IEK_KEY_PERIOD, "IEK_KEY_PERIOD" },
	{ InputEvent::IEK_KEY_POWER, "IEK_KEY_POWER" },
	{ InputEvent::IEK_KEY_PRINTSCREEN, "IEK_KEY_PRINTSCREEN" },
	{ InputEvent::IEK_KEY_PRIOR, "IEK_KEY_PRIOR" },
	{ InputEvent::IEK_KEY_Q, "IEK_KEY_Q" },
	{ InputEvent::IEK_KEY_R, "IEK_KEY_R" },
	{ InputEvent::IEK_KEY_RALT, "IEK_KEY_RALT" },
	{ InputEvent::IEK_KEY_RCTRL, "IEK_KEY_RCTRL" },
	{ InputEvent::IEK_KEY_RETURN, "IEK_KEY_RETURN" },
	{ InputEvent::IEK_KEY_RETURN2, "IEK_KEY_RETURN2" },
	{ InputEvent::IEK_KEY_RGUI, "IEK_KEY_RGUI" },
	{ InputEvent::IEK_KEY_RIGHT, "IEK_KEY_RIGHT" },
	{ InputEvent::IEK_KEY_RIGHTBRACKET, "IEK_KEY_RIGHTBRACKET" },
	{ InputEvent::IEK_KEY_RSHIFT, "IEK_KEY_RSHIFT" },
	{ InputEvent::IEK_KEY_S, "IEK_KEY_S" },
	{ InputEvent::IEK_KEY_SCROLLLOCK, "IEK_KEY_SCROLLLOCK" },
	{ InputEvent::IEK_KEY_SELECT, "IEK_KEY_SELECT" },
	{ InputEvent::IEK_KEY_SEMICOLON, "IEK_KEY_SEMICOLON" },
	{ InputEvent::IEK_KEY_SEPARATOR, "IEK_KEY_SEPARATOR" },
	{ InputEvent::IEK_KEY_SLASH, "IEK_KEY_SLASH" },
	{ InputEvent::IEK_KEY_SLEEP, "IEK_KEY_SLEEP" },
	{ InputEvent::IEK_KEY_SPACE, "IEK_KEY_SPACE" },
	{ InputEvent::IEK_KEY_STOP, "IEK_KEY_STOP" },
	{ InputEvent::IEK_KEY_SYSREQ, "IEK_KEY_SYSREQ" },
	{ InputEvent::IEK_KEY_T, "IEK_KEY_T" },
	{ InputEvent::IEK_KEY_TAB, "IEK_KEY_TAB" },
	{ InputEvent::IEK_KEY_THOUSANDSSEPARATOR, "IEK_KEY_THOUSANDSSEPARATOR" },
	{ InputEvent::IEK_KEY_U, "IEK_KEY_U" },
	{ InputEvent::IEK_KEY_UNDO, "IEK_KEY_UNDO" },
	{ InputEvent::IEK_KEY_UNKNOWN, "IEK_KEY_UNKNOWN" },
	{ InputEvent::IEK_KEY_UP, "IEK_KEY_UP" },
	{ InputEvent::IEK_KEY_V, "IEK_KEY_V" },
	{ InputEvent::IEK_KEY_VOLUMEDOWN, "IEK_KEY_VOLUMEDOWN" },
	{ InputEvent::IEK_KEY_VOLUMEUP, "IEK_KEY_VOLUMEUP" },
	{ InputEvent::IEK_KEY_W, "IEK_KEY_W" },
	{ InputEvent::IEK_KEY_WWW, "IEK_KEY_WWW" },
	{ InputEvent::IEK_KEY_X, "IEK_KEY_X" },
	{ InputEvent::IEK_KEY_Y, "IEK_KEY_Y" },
	{ InputEvent::IEK_KEY_Z, "IEK_KEY_Z" },
	{ InputEvent::IEK_KEY_AMPERSAND, "IEK_KEY_AMPERSAND" },
	{ InputEvent::IEK_KEY_ASTERISK, "IEK_KEY_ASTERISK" },
	{ InputEvent::IEK_KEY_AT, "IEK_KEY_AT" },
	{ InputEvent::IEK_KEY_CARET, "IEK_KEY_CARET" },
	{ InputEvent::IEK_KEY_COLON, "IEK_KEY_COLON" },
	{ InputEvent::IEK_KEY_DOLLAR, "IEK_KEY_DOLLAR" },
	{ InputEvent::IEK_KEY_EXCLAIM, "IEK_KEY_EXCLAIM" },
	{ InputEvent::IEK_KEY_GREATER, "IEK_KEY_GREATER" },
	{ InputEvent::IEK_KEY_HASH, "IEK_KEY_HASH" },
	{ InputEvent::IEK_KEY_LEFTPAREN, "IEK_KEY_LEFTPAREN" },
	{ InputEvent::IEK_KEY_LESS, "IEK_KEY_LESS" },
	{ InputEvent::IEK_KEY_PERCENT, "IEK_KEY_PERCENT" },
	{ InputEvent::IEK_KEY_PLUS, "IEK_KEY_PLUS" },
	{ InputEvent::IEK_KEY_QUESTION, "IEK_KEY_QUESTION" },
	{ InputEvent::IEK_KEY_QUOTEDBL, "IEK_KEY_QUOTEDBL" },
	{ InputEvent::IEK_KEY_RIGHTPAREN, "IEK_KEY_RIGHTPAREN" },
	{ InputEvent::IEK_KEY_UNDERSCORE, "IEK_KEY_UNDERSCORE"}
};

std::map<InputEvent::InputEventKeyState, std::string> InputEvent::eventKeyStateDescriptions = {
	{InputEvent::IEKS_NO_STATE, "IEKS_NO_STATE" },
	{InputEvent::IEKS_KEYDOWN, "IEKS_KEYDOWN"},
	{InputEvent::IEKS_KEYUP, "IEKS_KEYUP"}
};

std::map<int, InputEvent::InputEventKey> InputEvent::sdlKeyTranslations = {
	{ SDLK_0, InputEvent::IEK_KEY_0 },
	{ SDLK_1, InputEvent::IEK_KEY_1 },
	{ SDLK_2, InputEvent::IEK_KEY_2 },
	{ SDLK_3, InputEvent::IEK_KEY_3 },
	{ SDLK_4, InputEvent::IEK_KEY_4 },
	{ SDLK_5, InputEvent::IEK_KEY_5 },
	{ SDLK_6, InputEvent::IEK_KEY_6 },
	{ SDLK_7, InputEvent::IEK_KEY_7 },
	{ SDLK_8, InputEvent::IEK_KEY_8 },
	{ SDLK_9, InputEvent::IEK_KEY_9 },
	{ SDLK_a, InputEvent::IEK_KEY_A },
	{ SDLK_AC_BACK, InputEvent::IEK_KEY_AC_BACK },
	{ SDLK_AC_BOOKMARKS, InputEvent::IEK_KEY_AC_BOOKMARKS },
	{ SDLK_AC_FORWARD, InputEvent::IEK_KEY_AC_FORWARD },
	{ SDLK_AC_HOME, InputEvent::IEK_KEY_AC_HOME },
	{ SDLK_AC_REFRESH, InputEvent::IEK_KEY_AC_REFRESH },
	{ SDLK_AC_SEARCH, InputEvent::IEK_KEY_AC_SEARCH },
	{ SDLK_AC_STOP, InputEvent::IEK_KEY_AC_STOP },
	{ SDLK_AGAIN, InputEvent::IEK_KEY_AGAIN },
	{ SDLK_ALTERASE, InputEvent::IEK_KEY_ALTERASE },
	{ SDLK_QUOTE, InputEvent::IEK_KEY_QUOTE },
	{ SDLK_APPLICATION, InputEvent::IEK_KEY_APPLICATION },
	{ SDLK_AUDIOMUTE, InputEvent::IEK_KEY_AUDIOMUTE },
	{ SDLK_AUDIONEXT, InputEvent::IEK_KEY_AUDIONEXT },
	{ SDLK_AUDIOPLAY, InputEvent::IEK_KEY_AUDIOPLAY },
	{ SDLK_AUDIOPREV, InputEvent::IEK_KEY_AUDIOPREV },
	{ SDLK_AUDIOSTOP, InputEvent::IEK_KEY_AUDIOSTOP },
	{ SDLK_b, InputEvent::IEK_KEY_B },
	{ SDLK_BACKSLASH, InputEvent::IEK_KEY_BACKSLASH },
	{ SDLK_BACKSPACE, InputEvent::IEK_KEY_BACKSPACE },
	{ SDLK_BRIGHTNESSDOWN, InputEvent::IEK_KEY_BRIGHTNESSDOWN },
	{ SDLK_BRIGHTNESSUP, InputEvent::IEK_KEY_BRIGHTNESSUP },
	{ SDLK_c, InputEvent::IEK_KEY_C },
	{ SDLK_CALCULATOR, InputEvent::IEK_KEY_CALCULATOR },
	{ SDLK_CANCEL, InputEvent::IEK_KEY_CANCEL },
	{ SDLK_CAPSLOCK, InputEvent::IEK_KEY_CAPSLOCK },
	{ SDLK_CLEAR, InputEvent::IEK_KEY_CLEAR },
	{ SDLK_CLEARAGAIN, InputEvent::IEK_KEY_CLEARAGAIN },
	{ SDLK_COMMA, InputEvent::IEK_KEY_COMMA },
	{ SDLK_COMPUTER, InputEvent::IEK_KEY_COMPUTER },
	{ SDLK_COPY, InputEvent::IEK_KEY_COPY },
	{ SDLK_CRSEL, InputEvent::IEK_KEY_CRSEL },
	{ SDLK_CURRENCYSUBUNIT, InputEvent::IEK_KEY_CURRENCYSUBUNIT },
	{ SDLK_CURRENCYUNIT, InputEvent::IEK_KEY_CURRENCYUNIT },
	{ SDLK_CUT, InputEvent::IEK_KEY_CUT },
	{ SDLK_d, InputEvent::IEK_KEY_D },
	{ SDLK_DECIMALSEPARATOR, InputEvent::IEK_KEY_DECIMALSEPARATOR },
	{ SDLK_DELETE, InputEvent::IEK_KEY_DELETE },
	{ SDLK_DISPLAYSWITCH, InputEvent::IEK_KEY_DISPLAYSWITCH },
	{ SDLK_DOWN, InputEvent::IEK_KEY_DOWN },
	{ SDLK_e, InputEvent::IEK_KEY_E },
	{ SDLK_EJECT, InputEvent::IEK_KEY_EJECT },
	{ SDLK_END, InputEvent::IEK_KEY_END },
	{ SDLK_EQUALS, InputEvent::IEK_KEY_EQUALS },
	{ SDLK_ESCAPE, InputEvent::IEK_KEY_ESCAPE },
	{ SDLK_EXECUTE, InputEvent::IEK_KEY_EXECUTE },
	{ SDLK_EXSEL, InputEvent::IEK_KEY_EXSEL },
	{ SDLK_f, InputEvent::IEK_KEY_F },
	{ SDLK_F1, InputEvent::IEK_KEY_F1 },
	{ SDLK_F10, InputEvent::IEK_KEY_F10 },
	{ SDLK_F11, InputEvent::IEK_KEY_F11 },
	{ SDLK_F12, InputEvent::IEK_KEY_F12 },
	{ SDLK_F13, InputEvent::IEK_KEY_F13 },
	{ SDLK_F14, InputEvent::IEK_KEY_F14 },
	{ SDLK_F15, InputEvent::IEK_KEY_F15 },
	{ SDLK_F16, InputEvent::IEK_KEY_F16 },
	{ SDLK_F17, InputEvent::IEK_KEY_F17 },
	{ SDLK_F18, InputEvent::IEK_KEY_F18 },
	{ SDLK_F19, InputEvent::IEK_KEY_F19 },
	{ SDLK_F2, InputEvent::IEK_KEY_F2 },
	{ SDLK_F20, InputEvent::IEK_KEY_F20 },
	{ SDLK_F21, InputEvent::IEK_KEY_F21 },
	{ SDLK_F22, InputEvent::IEK_KEY_F22 },
	{ SDLK_F23, InputEvent::IEK_KEY_F23 },
	{ SDLK_F24, InputEvent::IEK_KEY_F24 },
	{ SDLK_F3, InputEvent::IEK_KEY_F3 },
	{ SDLK_F4, InputEvent::IEK_KEY_F4 },
	{ SDLK_F5, InputEvent::IEK_KEY_F5 },
	{ SDLK_F6, InputEvent::IEK_KEY_F6 },
	{ SDLK_F7, InputEvent::IEK_KEY_F7 },
	{ SDLK_F8, InputEvent::IEK_KEY_F8 },
	{ SDLK_F9, InputEvent::IEK_KEY_F9 },
	{ SDLK_FIND, InputEvent::IEK_KEY_FIND },
	{ SDLK_g, InputEvent::IEK_KEY_G },
	{ SDLK_BACKQUOTE, InputEvent::IEK_KEY_BACKQUOTE },
	{ SDLK_h, InputEvent::IEK_KEY_H },
	{ SDLK_HELP, InputEvent::IEK_KEY_HELP },
	{ SDLK_HOME, InputEvent::IEK_KEY_HOME },
	{ SDLK_i, InputEvent::IEK_KEY_I },
	{ SDLK_INSERT, InputEvent::IEK_KEY_INSERT },
	{ SDLK_j, InputEvent::IEK_KEY_J },
	{ SDLK_k, InputEvent::IEK_KEY_K },
	{ SDLK_KBDILLUMDOWN, InputEvent::IEK_KEY_KBDILLUMDOWN },
	{ SDLK_KBDILLUMTOGGLE, InputEvent::IEK_KEY_KBDILLUMTOGGLE },
	{ SDLK_KBDILLUMUP, InputEvent::IEK_KEY_KBDILLUMUP },
	{ SDLK_KP_0, InputEvent::IEK_KEY_KP_0 },
	{ SDLK_KP_00, InputEvent::IEK_KEY_KP_00 },
	{ SDLK_KP_000, InputEvent::IEK_KEY_KP_000 },
	{ SDLK_KP_1, InputEvent::IEK_KEY_KP_1 },
	{ SDLK_KP_2, InputEvent::IEK_KEY_KP_2 },
	{ SDLK_KP_3, InputEvent::IEK_KEY_KP_3 },
	{ SDLK_KP_4, InputEvent::IEK_KEY_KP_4 },
	{ SDLK_KP_5, InputEvent::IEK_KEY_KP_5 },
	{ SDLK_KP_6, InputEvent::IEK_KEY_KP_6 },
	{ SDLK_KP_7, InputEvent::IEK_KEY_KP_7 },
	{ SDLK_KP_8, InputEvent::IEK_KEY_KP_8 },
	{ SDLK_KP_9, InputEvent::IEK_KEY_KP_9 },
	{ SDLK_KP_A, InputEvent::IEK_KEY_KP_A },
	{ SDLK_KP_AMPERSAND, InputEvent::IEK_KEY_KP_AMPERSAND },
	{ SDLK_KP_AT, InputEvent::IEK_KEY_KP_AT },
	{ SDLK_KP_B, InputEvent::IEK_KEY_KP_B },
	{ SDLK_KP_BACKSPACE, InputEvent::IEK_KEY_KP_BACKSPACE },
	{ SDLK_KP_BINARY, InputEvent::IEK_KEY_KP_BINARY },
	{ SDLK_KP_C, InputEvent::IEK_KEY_KP_C },
	{ SDLK_KP_CLEAR, InputEvent::IEK_KEY_KP_CLEAR },
	{ SDLK_KP_CLEARENTRY, InputEvent::IEK_KEY_KP_CLEARENTRY },
	{ SDLK_KP_COLON, InputEvent::IEK_KEY_KP_COLON },
	{ SDLK_KP_COMMA, InputEvent::IEK_KEY_KP_COMMA },
	{ SDLK_KP_D, InputEvent::IEK_KEY_KP_D },
	{ SDLK_KP_DBLAMPERSAND, InputEvent::IEK_KEY_KP_DBLAMPERSAND },
	{ SDLK_KP_DBLVERTICALBAR, InputEvent::IEK_KEY_KP_DBLVERTICALBAR },
	{ SDLK_KP_DECIMAL, InputEvent::IEK_KEY_KP_DECIMAL },
	{ SDLK_KP_DIVIDE, InputEvent::IEK_KEY_KP_DIVIDE },
	{ SDLK_KP_E, InputEvent::IEK_KEY_KP_E },
	{ SDLK_KP_ENTER, InputEvent::IEK_KEY_KP_ENTER },
	{ SDLK_KP_EQUALS, InputEvent::IEK_KEY_KP_EQUALS },
	{ SDLK_KP_EQUALSAS400, InputEvent::IEK_KEY_KP_EQUALSAS400 },
	{ SDLK_KP_EXCLAM, InputEvent::IEK_KEY_KP_EXCLAM },
	{ SDLK_KP_F, InputEvent::IEK_KEY_KP_F },
	{ SDLK_KP_GREATER, InputEvent::IEK_KEY_KP_GREATER },
	{ SDLK_KP_HASH, InputEvent::IEK_KEY_KP_HASH },
	{ SDLK_KP_HEXADECIMAL, InputEvent::IEK_KEY_KP_HEXADECIMAL },
	{ SDLK_KP_LEFTBRACE, InputEvent::IEK_KEY_KP_LEFTBRACE },
	{ SDLK_KP_LEFTPAREN, InputEvent::IEK_KEY_KP_LEFTPAREN },
	{ SDLK_KP_LESS, InputEvent::IEK_KEY_KP_LESS },
	{ SDLK_KP_MEMADD, InputEvent::IEK_KEY_KP_MEMADD },
	{ SDLK_KP_MEMCLEAR, InputEvent::IEK_KEY_KP_MEMCLEAR },
	{ SDLK_KP_MEMDIVIDE, InputEvent::IEK_KEY_KP_MEMDIVIDE },
	{ SDLK_KP_MEMMULTIPLY, InputEvent::IEK_KEY_KP_MEMMULTIPLY },
	{ SDLK_KP_MEMRECALL, InputEvent::IEK_KEY_KP_MEMRECALL },
	{ SDLK_KP_MEMSTORE, InputEvent::IEK_KEY_KP_MEMSTORE },
	{ SDLK_KP_MEMSUBTRACT, InputEvent::IEK_KEY_KP_MEMSUBTRACT },
	{ SDLK_KP_MINUS, InputEvent::IEK_KEY_KP_MINUS },
	{ SDLK_KP_MULTIPLY, InputEvent::IEK_KEY_KP_MULTIPLY },
	{ SDLK_KP_OCTAL, InputEvent::IEK_KEY_KP_OCTAL },
	{ SDLK_KP_PERCENT, InputEvent::IEK_KEY_KP_PERCENT },
	{ SDLK_KP_PERIOD, InputEvent::IEK_KEY_KP_PERIOD },
	{ SDLK_KP_PLUS, InputEvent::IEK_KEY_KP_PLUS },
	{ SDLK_KP_PLUSMINUS, InputEvent::IEK_KEY_KP_PLUSMINUS },
	{ SDLK_KP_POWER, InputEvent::IEK_KEY_KP_POWER },
	{ SDLK_KP_RIGHTBRACE, InputEvent::IEK_KEY_KP_RIGHTBRACE },
	{ SDLK_KP_RIGHTPAREN, InputEvent::IEK_KEY_KP_RIGHTPAREN },
	{ SDLK_KP_SPACE, InputEvent::IEK_KEY_KP_SPACE },
	{ SDLK_KP_TAB, InputEvent::IEK_KEY_KP_TAB },
	{ SDLK_KP_VERTICALBAR, InputEvent::IEK_KEY_KP_VERTICALBAR },
	{ SDLK_KP_XOR, InputEvent::IEK_KEY_KP_XOR },
	{ SDLK_l, InputEvent::IEK_KEY_L },
	{ SDLK_LALT, InputEvent::IEK_KEY_LALT },
	{ SDLK_LCTRL, InputEvent::IEK_KEY_LCTRL },
	{ SDLK_LEFT, InputEvent::IEK_KEY_LEFT },
	{ SDLK_LEFTBRACKET, InputEvent::IEK_KEY_LEFTBRACKET },
	{ SDLK_LGUI, InputEvent::IEK_KEY_LGUI },
	{ SDLK_LSHIFT, InputEvent::IEK_KEY_LSHIFT },
	{ SDLK_m, InputEvent::IEK_KEY_M },
	{ SDLK_MAIL, InputEvent::IEK_KEY_MAIL },
	{ SDLK_MEDIASELECT, InputEvent::IEK_KEY_MEDIASELECT },
	{ SDLK_MENU, InputEvent::IEK_KEY_MENU },
	{ SDLK_MINUS, InputEvent::IEK_KEY_MINUS },
	{ SDLK_MODE, InputEvent::IEK_KEY_MODE },
	{ SDLK_MUTE, InputEvent::IEK_KEY_MUTE },
	{ SDLK_n, InputEvent::IEK_KEY_N },
	{ SDLK_NUMLOCKCLEAR, InputEvent::IEK_KEY_NUMLOCKCLEAR },
	{ SDLK_o, InputEvent::IEK_KEY_O },
	{ SDLK_OPER, InputEvent::IEK_KEY_OPER },
	{ SDLK_OUT, InputEvent::IEK_KEY_OUT },
	{ SDLK_p, InputEvent::IEK_KEY_P },
	{ SDLK_PAGEDOWN, InputEvent::IEK_KEY_PAGEDOWN },
	{ SDLK_PAGEUP, InputEvent::IEK_KEY_PAGEUP },
	{ SDLK_PASTE, InputEvent::IEK_KEY_PASTE },
	{ SDLK_PAUSE, InputEvent::IEK_KEY_PAUSE },
	{ SDLK_PERIOD, InputEvent::IEK_KEY_PERIOD },
	{ SDLK_POWER, InputEvent::IEK_KEY_POWER },
	{ SDLK_PRINTSCREEN, InputEvent::IEK_KEY_PRINTSCREEN },
	{ SDLK_PRIOR, InputEvent::IEK_KEY_PRIOR },
	{ SDLK_q, InputEvent::IEK_KEY_Q },
	{ SDLK_r, InputEvent::IEK_KEY_R },
	{ SDLK_RALT, InputEvent::IEK_KEY_RALT },
	{ SDLK_RCTRL, InputEvent::IEK_KEY_RCTRL },
	{ SDLK_RETURN, InputEvent::IEK_KEY_RETURN },
	{ SDLK_RETURN2, InputEvent::IEK_KEY_RETURN2 },
	{ SDLK_RGUI, InputEvent::IEK_KEY_RGUI },
	{ SDLK_RIGHT, InputEvent::IEK_KEY_RIGHT },
	{ SDLK_RIGHTBRACKET, InputEvent::IEK_KEY_RIGHTBRACKET },
	{ SDLK_RSHIFT, InputEvent::IEK_KEY_RSHIFT },
	{ SDLK_s, InputEvent::IEK_KEY_S },
	{ SDLK_SCROLLLOCK, InputEvent::IEK_KEY_SCROLLLOCK },
	{ SDLK_SELECT, InputEvent::IEK_KEY_SELECT },
	{ SDLK_SEMICOLON, InputEvent::IEK_KEY_SEMICOLON },
	{ SDLK_SEPARATOR, InputEvent::IEK_KEY_SEPARATOR },
	{ SDLK_SLASH, InputEvent::IEK_KEY_SLASH },
	{ SDLK_SLEEP, InputEvent::IEK_KEY_SLEEP },
	{ SDLK_SPACE, InputEvent::IEK_KEY_SPACE },
	{ SDLK_STOP, InputEvent::IEK_KEY_STOP },
	{ SDLK_SYSREQ, InputEvent::IEK_KEY_SYSREQ },
	{ SDLK_t, InputEvent::IEK_KEY_T },
	{ SDLK_TAB, InputEvent::IEK_KEY_TAB },
	{ SDLK_THOUSANDSSEPARATOR, InputEvent::IEK_KEY_THOUSANDSSEPARATOR },
	{ SDLK_u, InputEvent::IEK_KEY_U },
	{ SDLK_UNDO, InputEvent::IEK_KEY_UNDO },
	{ SDLK_UNKNOWN, InputEvent::IEK_KEY_UNKNOWN },
	{ SDLK_UP, InputEvent::IEK_KEY_UP },
	{ SDLK_v, InputEvent::IEK_KEY_V },
	{ SDLK_VOLUMEDOWN, InputEvent::IEK_KEY_VOLUMEDOWN },
	{ SDLK_VOLUMEUP, InputEvent::IEK_KEY_VOLUMEUP },
	{ SDLK_w, InputEvent::IEK_KEY_W },
	{ SDLK_WWW, InputEvent::IEK_KEY_WWW },
	{ SDLK_x, InputEvent::IEK_KEY_X },
	{ SDLK_y, InputEvent::IEK_KEY_Y },
	{ SDLK_z, InputEvent::IEK_KEY_Z },
	{ SDLK_AMPERSAND, InputEvent::IEK_KEY_AMPERSAND },
	{ SDLK_ASTERISK, InputEvent::IEK_KEY_ASTERISK },
	{ SDLK_AT, InputEvent::IEK_KEY_AT },
	{ SDLK_CARET, InputEvent::IEK_KEY_CARET },
	{ SDLK_COLON, InputEvent::IEK_KEY_COLON },
	{ SDLK_DOLLAR, InputEvent::IEK_KEY_DOLLAR },
	{ SDLK_EXCLAIM, InputEvent::IEK_KEY_EXCLAIM },
	{ SDLK_GREATER, InputEvent::IEK_KEY_GREATER },
	{ SDLK_HASH, InputEvent::IEK_KEY_HASH },
	{ SDLK_LEFTPAREN, InputEvent::IEK_KEY_LEFTPAREN },
	{ SDLK_LESS, InputEvent::IEK_KEY_LESS },
	{ SDLK_PERCENT, InputEvent::IEK_KEY_PERCENT },
	{ SDLK_PLUS, InputEvent::IEK_KEY_PLUS },
	{ SDLK_QUESTION, InputEvent::IEK_KEY_QUESTION },
	{ SDLK_QUOTEDBL, InputEvent::IEK_KEY_QUOTEDBL },
	{ SDLK_RIGHTPAREN, InputEvent::IEK_KEY_RIGHTPAREN },
	{ SDLK_UNDERSCORE, InputEvent::IEK_KEY_UNDERSCORE }
};

std::map<int, InputEvent::InputEventKeyState> InputEvent::sdlKeyStateTranslations = {
	{SDL_KEYDOWN, InputEvent::IEKS_KEYDOWN},
	{SDL_KEYUP, InputEvent::IEKS_KEYUP}
};

std::string InputEvent::decodeInputEventKey(InputEventKey eventKey) {
	return eventKeyDescriptions[eventKey];
}

std::string InputEvent::decodeInputEventKeyState(InputEventKeyState eventKeyState) {
	return eventKeyStateDescriptions[eventKeyState];
}

InputEvent::InputEventKey InputEvent::translateSdlInputEventKey(int sdlKeyCode) {
	return sdlKeyTranslations[sdlKeyCode];
}

InputEvent::InputEventKeyState InputEvent::translateSdlInputEventKeyState(int sdlEventKeyState) {
	return sdlKeyStateTranslations[sdlEventKeyState];
}

void InputEvent::print() {
	std::cout << "------------------------------------------------" << std::endl;
	std::cout << "          Event Key: " << decodeInputEventKey(eventKey) << std::endl;
	std::cout << "    Event Key State: " << decodeInputEventKeyState(eventKeyState) << std::endl;
	std::cout << "X Screen Coordinate: " << xScreenCoordinate << std::endl;
	std::cout << "Y Screen Coordinate: " << yScreenCoordinate << std::endl;
	std::cout << " X World Coordinate: " << xWorldCoordinate << std::endl;
	std::cout << " Y World Coordinate: " << yWorldCoordinate << std::endl;
}
