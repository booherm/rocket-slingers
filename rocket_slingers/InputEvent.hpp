#ifndef INPUTEVENT_HPP
#define INPUTEVENT_HPP

#include <string>
#include <map>

class InputEvent
{
public:
	enum InputEventKey {
		IEK_KEY_0,
		IEK_KEY_1,
		IEK_KEY_2,
		IEK_KEY_3,
		IEK_KEY_4,
		IEK_KEY_5,
		IEK_KEY_6,
		IEK_KEY_7,
		IEK_KEY_8,
		IEK_KEY_9,
		IEK_KEY_A,
		IEK_KEY_AC_BACK,
		IEK_KEY_AC_BOOKMARKS,
		IEK_KEY_AC_FORWARD,
		IEK_KEY_AC_HOME,
		IEK_KEY_AC_REFRESH,
		IEK_KEY_AC_SEARCH,
		IEK_KEY_AC_STOP,
		IEK_KEY_AGAIN,
		IEK_KEY_ALTERASE,
		IEK_KEY_QUOTE,
		IEK_KEY_APPLICATION,
		IEK_KEY_AUDIOMUTE,
		IEK_KEY_AUDIONEXT,
		IEK_KEY_AUDIOPLAY,
		IEK_KEY_AUDIOPREV,
		IEK_KEY_AUDIOSTOP,
		IEK_KEY_B,
		IEK_KEY_BACKSLASH,
		IEK_KEY_BACKSPACE,
		IEK_KEY_BRIGHTNESSDOWN,
		IEK_KEY_BRIGHTNESSUP,
		IEK_KEY_C,
		IEK_KEY_CALCULATOR,
		IEK_KEY_CANCEL,
		IEK_KEY_CAPSLOCK,
		IEK_KEY_CLEAR,
		IEK_KEY_CLEARAGAIN,
		IEK_KEY_COMMA,
		IEK_KEY_COMPUTER,
		IEK_KEY_COPY,
		IEK_KEY_CRSEL,
		IEK_KEY_CURRENCYSUBUNIT,
		IEK_KEY_CURRENCYUNIT,
		IEK_KEY_CUT,
		IEK_KEY_D,
		IEK_KEY_DECIMALSEPARATOR,
		IEK_KEY_DELETE,
		IEK_KEY_DISPLAYSWITCH,
		IEK_KEY_DOWN,
		IEK_KEY_E,
		IEK_KEY_EJECT,
		IEK_KEY_END,
		IEK_KEY_EQUALS,
		IEK_KEY_ESCAPE,
		IEK_KEY_EXECUTE,
		IEK_KEY_EXSEL,
		IEK_KEY_F,
		IEK_KEY_F1,
		IEK_KEY_F10,
		IEK_KEY_F11,
		IEK_KEY_F12,
		IEK_KEY_F13,
		IEK_KEY_F14,
		IEK_KEY_F15,
		IEK_KEY_F16,
		IEK_KEY_F17,
		IEK_KEY_F18,
		IEK_KEY_F19,
		IEK_KEY_F2,
		IEK_KEY_F20,
		IEK_KEY_F21,
		IEK_KEY_F22,
		IEK_KEY_F23,
		IEK_KEY_F24,
		IEK_KEY_F3,
		IEK_KEY_F4,
		IEK_KEY_F5,
		IEK_KEY_F6,
		IEK_KEY_F7,
		IEK_KEY_F8,
		IEK_KEY_F9,
		IEK_KEY_FIND,
		IEK_KEY_G,
		IEK_KEY_BACKQUOTE,
		IEK_KEY_H,
		IEK_KEY_HELP,
		IEK_KEY_HOME,
		IEK_KEY_I,
		IEK_KEY_INSERT,
		IEK_KEY_J,
		IEK_KEY_K,
		IEK_KEY_KBDILLUMDOWN,
		IEK_KEY_KBDILLUMTOGGLE,
		IEK_KEY_KBDILLUMUP,
		IEK_KEY_KP_0,
		IEK_KEY_KP_00,
		IEK_KEY_KP_000,
		IEK_KEY_KP_1,
		IEK_KEY_KP_2,
		IEK_KEY_KP_3,
		IEK_KEY_KP_4,
		IEK_KEY_KP_5,
		IEK_KEY_KP_6,
		IEK_KEY_KP_7,
		IEK_KEY_KP_8,
		IEK_KEY_KP_9,
		IEK_KEY_KP_A,
		IEK_KEY_KP_AMPERSAND,
		IEK_KEY_KP_AT,
		IEK_KEY_KP_B,
		IEK_KEY_KP_BACKSPACE,
		IEK_KEY_KP_BINARY,
		IEK_KEY_KP_C,
		IEK_KEY_KP_CLEAR,
		IEK_KEY_KP_CLEARENTRY,
		IEK_KEY_KP_COLON,
		IEK_KEY_KP_COMMA,
		IEK_KEY_KP_D,
		IEK_KEY_KP_DBLAMPERSAND,
		IEK_KEY_KP_DBLVERTICALBAR,
		IEK_KEY_KP_DECIMAL,
		IEK_KEY_KP_DIVIDE,
		IEK_KEY_KP_E,
		IEK_KEY_KP_ENTER,
		IEK_KEY_KP_EQUALS,
		IEK_KEY_KP_EQUALSAS400,
		IEK_KEY_KP_EXCLAM,
		IEK_KEY_KP_F,
		IEK_KEY_KP_GREATER,
		IEK_KEY_KP_HASH,
		IEK_KEY_KP_HEXADECIMAL,
		IEK_KEY_KP_LEFTBRACE,
		IEK_KEY_KP_LEFTPAREN,
		IEK_KEY_KP_LESS,
		IEK_KEY_KP_MEMADD,
		IEK_KEY_KP_MEMCLEAR,
		IEK_KEY_KP_MEMDIVIDE,
		IEK_KEY_KP_MEMMULTIPLY,
		IEK_KEY_KP_MEMRECALL,
		IEK_KEY_KP_MEMSTORE,
		IEK_KEY_KP_MEMSUBTRACT,
		IEK_KEY_KP_MINUS,
		IEK_KEY_KP_MULTIPLY,
		IEK_KEY_KP_OCTAL,
		IEK_KEY_KP_PERCENT,
		IEK_KEY_KP_PERIOD,
		IEK_KEY_KP_PLUS,
		IEK_KEY_KP_PLUSMINUS,
		IEK_KEY_KP_POWER,
		IEK_KEY_KP_RIGHTBRACE,
		IEK_KEY_KP_RIGHTPAREN,
		IEK_KEY_KP_SPACE,
		IEK_KEY_KP_TAB,
		IEK_KEY_KP_VERTICALBAR,
		IEK_KEY_KP_XOR,
		IEK_KEY_L,
		IEK_KEY_LALT,
		IEK_KEY_LCTRL,
		IEK_KEY_LEFT,
		IEK_KEY_LEFTBRACKET,
		IEK_KEY_LGUI,
		IEK_KEY_LSHIFT,
		IEK_KEY_M,
		IEK_KEY_MAIL,
		IEK_KEY_MEDIASELECT,
		IEK_KEY_MENU,
		IEK_KEY_MINUS,
		IEK_KEY_MODE,
		IEK_KEY_MUTE,
		IEK_KEY_N,
		IEK_KEY_NUMLOCKCLEAR,
		IEK_KEY_O,
		IEK_KEY_OPER,
		IEK_KEY_OUT,
		IEK_KEY_P,
		IEK_KEY_PAGEDOWN,
		IEK_KEY_PAGEUP,
		IEK_KEY_PASTE,
		IEK_KEY_PAUSE,
		IEK_KEY_PERIOD,
		IEK_KEY_POWER,
		IEK_KEY_PRINTSCREEN,
		IEK_KEY_PRIOR,
		IEK_KEY_Q,
		IEK_KEY_R,
		IEK_KEY_RALT,
		IEK_KEY_RCTRL,
		IEK_KEY_RETURN,
		IEK_KEY_RETURN2,
		IEK_KEY_RGUI,
		IEK_KEY_RIGHT,
		IEK_KEY_RIGHTBRACKET,
		IEK_KEY_RSHIFT,
		IEK_KEY_S,
		IEK_KEY_SCROLLLOCK,
		IEK_KEY_SELECT,
		IEK_KEY_SEMICOLON,
		IEK_KEY_SEPARATOR,
		IEK_KEY_SLASH,
		IEK_KEY_SLEEP,
		IEK_KEY_SPACE,
		IEK_KEY_STOP,
		IEK_KEY_SYSREQ,
		IEK_KEY_T,
		IEK_KEY_TAB,
		IEK_KEY_THOUSANDSSEPARATOR,
		IEK_KEY_U,
		IEK_KEY_UNDO,
		IEK_KEY_UNKNOWN,
		IEK_KEY_UP,
		IEK_KEY_V,
		IEK_KEY_VOLUMEDOWN,
		IEK_KEY_VOLUMEUP,
		IEK_KEY_W,
		IEK_KEY_WWW,
		IEK_KEY_X,
		IEK_KEY_Y,
		IEK_KEY_Z,
		IEK_KEY_AMPERSAND,
		IEK_KEY_ASTERISK,
		IEK_KEY_AT,
		IEK_KEY_CARET,
		IEK_KEY_COLON,
		IEK_KEY_DOLLAR,
		IEK_KEY_EXCLAIM,
		IEK_KEY_GREATER,
		IEK_KEY_HASH,
		IEK_KEY_LEFTPAREN,
		IEK_KEY_LESS,
		IEK_KEY_PERCENT,
		IEK_KEY_PLUS,
		IEK_KEY_QUESTION,
		IEK_KEY_QUOTEDBL,
		IEK_KEY_RIGHTPAREN,
		IEK_KEY_UNDERSCORE,
		IEK_MOUSE_MOVE,
		IEK_MOUSE_BUTTON_1,
		IEK_MOUSE_BUTTON_2,
		IEK_MOUSE_BUTTON_3
	};

	enum InputEventKeyState {
		IEKS_NO_STATE,
		IEKS_KEYDOWN,
		IEKS_KEYUP
	};

	InputEventKey eventKey;
	InputEventKeyState eventKeyState;
	double xScreenCoordinate;
	double yScreenCoordinate;
	float xWorldCoordinate;
	float yWorldCoordinate;

private:
	static std::map<InputEventKey, std::string> eventKeyDescriptions;
	static std::map<InputEventKeyState, std::string> eventKeyStateDescriptions;
	static std::map<int, InputEventKey> sdlKeyTranslations;
	static std::map<int, InputEventKeyState> sdlKeyStateTranslations;

public:
	void print();
	static std::string decodeInputEventKey(InputEventKey eventKey);
	static std::string decodeInputEventKeyState(InputEventKeyState eventKeyState);
	static InputEventKey translateSdlInputEventKey(int sdlKeyCode);
	static InputEventKeyState translateSdlInputEventKeyState(int sdlEventKeyState);

};

#endif
